// Code generated by "stringer -type=CommandType"; DO NOT EDIT.

package command

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CommandTypeUseItem-0]
	_ = x[CommandTypeDropItem-1]
	_ = x[CommandTypeSetFavorite-2]
	_ = x[CommandTypeToggleComponentFavorite-3]
	_ = x[CommandTypeSortInventory-4]
	_ = x[CommandTypeToggleQuest-5]
	_ = x[CommandTypeSetCustomMapMarker-6]
	_ = x[CommandTypeRemoveCustomMapMarker-7]
	_ = x[CommandTypeCheckFastTravel-8]
	_ = x[CommandTypeFastTravel-9]
	_ = x[CommandTypeMoveLocalMap-10]
	_ = x[CommandTypeZoomLocalMap-11]
	_ = x[CommandTypeToggleRadioStation-12]
	_ = x[CommandTypeRequestLocalMapSnapshot-13]
	_ = x[CommandTypeClearIdle-14]
}

const _CommandType_name = "CommandTypeUseItemCommandTypeDropItemCommandTypeSetFavoriteCommandTypeToggleComponentFavoriteCommandTypeSortInventoryCommandTypeToggleQuestCommandTypeSetCustomMapMarkerCommandTypeRemoveCustomMapMarkerCommandTypeCheckFastTravelCommandTypeFastTravelCommandTypeMoveLocalMapCommandTypeZoomLocalMapCommandTypeToggleRadioStationCommandTypeRequestLocalMapSnapshotCommandTypeClearIdle"

var _CommandType_index = [...]uint16{0, 18, 37, 59, 93, 117, 139, 168, 200, 226, 247, 270, 293, 322, 356, 376}

func (i CommandType) String() string {
	if i < 0 || i >= CommandType(len(_CommandType_index)-1) {
		return "CommandType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CommandType_name[_CommandType_index[i]:_CommandType_index[i+1]]
}
